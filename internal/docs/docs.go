// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/2fa/confirm-google-totp": {
            "get": {
                "description": "Google-Authenticator Confirmation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2FA"
                ],
                "summary": "Google-Authenticator Confirmation route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uint",
                        "description": " ",
                        "name": "otp",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Token"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/2fa/confirm-sms-otp": {
            "get": {
                "description": "SMS Confirmation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2FA"
                ],
                "summary": "SMS Confirmation route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uint",
                        "description": " ",
                        "name": "otp",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Token"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/2fa/send-sms-otp": {
            "get": {
                "description": "SMS sender",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "2FA"
                ],
                "summary": "SMS sender route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "X-Request-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.OTP"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authentication route",
                "parameters": [
                    {
                        "format": "json",
                        "description": "authentication",
                        "name": "authentication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "get": {
                "description": "RefreshToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "RefreshToken route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "refreshToken",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Token"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/confirm-transaction": {
            "get": {
                "description": "ConfirmTransaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "ConfirmTransaction route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "json",
                        "description": " ",
                        "name": "transactionId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/conversion": {
            "post": {
                "description": "Conversion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "Conversion route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "format": "json",
                        "description": "conversion",
                        "name": "conversion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConversionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ConversionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/get-account-details": {
            "get": {
                "description": "GetAccountDetails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "GetAccountDetails route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "json",
                        "description": " ",
                        "name": "accountNumber",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AccountDetailsForBankTrans"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/get-accounts": {
            "get": {
                "description": "GetAccounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "GetAccounts route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAccountsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/get-all-amount": {
            "get": {
                "description": "GetAllAmount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "GetAllAmount route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "json",
                        "description": " ",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllAmountsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/get-converted-value": {
            "get": {
                "description": "GetConvertedValue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "GetConvertedValue route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "format": "json",
                        "description": " ",
                        "name": "value",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "json",
                        "description": " ",
                        "name": "currencyFrom",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "json",
                        "description": " ",
                        "name": "currencyTo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ConvertedValueResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/get-limit-conversion": {
            "get": {
                "description": "GetLimitConversion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "GetLimitConversion route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "json",
                        "description": " ",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetLimitConversion"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/get-rates": {
            "get": {
                "description": "GetExchangeRates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "GetExchangeRates route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetExchangeRatesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/merchant/transactions": {
            "post": {
                "description": "GetHistoryOfTransactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "GetHistoryOfTransactions route",
                "parameters": [
                    {
                        "type": "string",
                        "format": "UUID",
                        "description": " ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "format": "json",
                        "description": "history filters",
                        "name": "filters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/merchant.FilterHistoryTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HistoryOfTransactionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "merchant.Account": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "merchant.AccountDetailsForBankTrans": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "merchant.Accounts": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "currencySym": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "merchant.Amount": {
            "type": "object",
            "properties": {
                "currencySymbol": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "merchant.ConversionResponse": {
            "type": "object",
            "properties": {
                "accountFrom": {
                    "$ref": "#/definitions/merchant.Account"
                },
                "accountTo": {
                    "$ref": "#/definitions/merchant.Account"
                },
                "amountFrom": {
                    "$ref": "#/definitions/merchant.Amount"
                },
                "amountTo": {
                    "$ref": "#/definitions/merchant.Amount"
                },
                "createDate": {
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "executionDate": {
                    "type": "string"
                },
                "footnote": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rate": {
                    "type": "string"
                },
                "signature": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/merchant.Signature"
                    }
                }
            }
        },
        "merchant.ConvertedValue": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "merchant.FilterHistoryTransaction": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fromDate": {
                    "type": "string"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer"
                        },
                        "currentPage": {
                            "type": "integer"
                        }
                    }
                },
                "toDate": {
                    "type": "string"
                }
            }
        },
        "merchant.GroupOfTransactions": {
            "type": "object",
            "properties": {
                "groupDate": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/merchant.Transaction"
                    }
                }
            }
        },
        "merchant.Rates": {
            "type": "object",
            "properties": {
                "buyRate": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "sellRate": {
                    "type": "string"
                }
            }
        },
        "merchant.Signature": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "merchant.Transaction": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "DateProcess",
                    "type": "string"
                },
                "documentNumber": {
                    "type": "string"
                },
                "fromAccount": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "object",
                            "properties": {
                                "currencySymbol": {
                                    "type": "string"
                                },
                                "value": {
                                    "description": "Amount",
                                    "type": "string"
                                }
                            }
                        },
                        "imageName": {
                            "type": "string"
                        },
                        "number": {
                            "description": "Acc??Number",
                            "type": "string"
                        },
                        "title": {
                            "description": "senderName",
                            "type": "string"
                        }
                    }
                },
                "id": {
                    "description": "Это DocId",
                    "type": "string"
                },
                "paymentPurpose": {
                    "description": "nazn",
                    "type": "string"
                },
                "proceededAt": {
                    "type": "string"
                },
                "status": {
                    "description": "Это DocState",
                    "type": "string"
                },
                "toAccount": {
                    "type": "object",
                    "properties": {
                        "number": {
                            "description": "Acc??Number",
                            "type": "string"
                        },
                        "title": {
                            "description": "RecipientName",
                            "type": "string"
                        }
                    }
                },
                "type": {
                    "description": "TransType",
                    "type": "string"
                }
            }
        },
        "models.AccountDetailsForBankTrans": {
            "type": "object",
            "properties": {
                "local": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/merchant.AccountDetailsForBankTrans"
                    }
                },
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                }
            }
        },
        "models.ConversionRequest": {
            "type": "object",
            "properties": {
                "accFrom": {
                    "type": "string"
                },
                "accTo": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "docNumber": {
                    "type": "string"
                },
                "executionDate": {
                    "type": "string"
                },
                "footnote": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                }
            }
        },
        "models.ConversionResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                },
                "transaction": {
                    "$ref": "#/definitions/merchant.ConversionResponse"
                }
            }
        },
        "models.ConvertedValueResponse": {
            "type": "object",
            "properties": {
                "convertedValue": {
                    "$ref": "#/definitions/merchant.ConvertedValue"
                },
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                }
            }
        },
        "models.ErrorModel": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "integer"
                },
                "errorDescription": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "integer"
                },
                "errorDescription": {
                    "type": "string"
                },
                "response": {}
            }
        },
        "models.GetAccountsResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/definitions/merchant.Accounts"
                },
                "merchName": {
                    "type": "string"
                },
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                }
            }
        },
        "models.GetAllAmountsResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "merchName": {
                    "type": "string"
                },
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                }
            }
        },
        "models.GetExchangeRatesResponse": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                },
                "rates": {
                    "$ref": "#/definitions/merchant.Rates"
                }
            }
        },
        "models.GetLimitConversion": {
            "type": "object",
            "properties": {
                "currentLimit": {
                    "type": "number"
                },
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                }
            }
        },
        "models.HistoryOfTransactionsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/merchant.GroupOfTransactions"
                    }
                },
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 9,
                    "minLength": 9
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "$ref": "#/definitions/models.ErrorModel"
                },
                "response": {
                    "$ref": "#/definitions/models.twoFa"
                }
            }
        },
        "models.OTP": {
            "type": "object",
            "properties": {
                "expirition": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "totalSent": {
                    "type": "integer"
                }
            }
        },
        "models.Token": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.googleAuth": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean"
                }
            }
        },
        "models.smsOTP": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean"
                }
            }
        },
        "models.twoFa": {
            "type": "object",
            "properties": {
                "googleAuthenticator": {
                    "$ref": "#/definitions/models.googleAuth"
                },
                "smsOtp": {
                    "$ref": "#/definitions/models.smsOTP"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8070",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "B2B Example API",
	Description:      "This is a B2B-API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
